@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider
@rendermode InteractiveServer

<PageTitle>MainPage</PageTitle>

<h2>Услуги</h2>

<div class="row g-3">
    <div class="col-auto">
        <input class="form-control me-2" type="search" placeholder="Поиск" aria-label="Search">
    </div>
    <div class="col-auto">
        <select class="form-select" aria-label="Default select example">
            <option selected>Все</option>
            <option value="1">Фотограф</option>
            <option value="2">Видеограф</option>
            <option value="3">Ретушер</option>
            <option value="4">Дизайнер</option>
            <option value="5">Модель</option>
            <option value="6">Визажист</option>
            <option value="7">Стилист</option>
            <option value="8">Предоставление красивых мест для съёмки</option>
            <option value="9">Предоставление специально оборудованных помещений для проведения съёмки</option>
            <option value="10">Организация съёмочного процесса</option>
        </select>
    </div>
</div>

<div class="row row-cols-1 row-cols-md-3 g-3 mt-2">
    <ServiceCardsForMainPage/>
    <ServiceCardsForMainPage/>
    <ServiceCardsForMainPage/>
    <ServiceCardsForMainPage/>
</div>


@* @code { *@
@*     [CascadingParameter]  *@
@*     public Task<AuthenticationState> State { get; set; } *@
@* *@
@*     private List<Claim> claims = new List<Claim>(); *@
@* *@
@*     private async Task GetClaimsPrincipalData() *@
@*     { *@
@*         var authState = await State; *@
@*         var user = authState.User; *@
@* *@
@*         if (user.Identity is not null && user.Identity.IsAuthenticated) *@
@*         { *@
@*             claims = user.Claims.ToList(); *@
@*         } *@
@*     } *@
@* } *@