@page "/orders"
@inject NavigationManager navManager
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Мои заказы</PageTitle>

<h2>Мои заказы</h2>

<div class="row g-3">
    <div class="col-auto">
        <input class="form-control me-2" type="search" placeholder="Поиск" aria-label="Search">
    </div>
    <div class="col-auto">
        <select class="form-select" aria-label="Default select example" @bind="@selectedStatus">
            <option selected value="Статус заказа">Статус заказа</option>
            <option value="Новый">Новый</option>
            <option value="В работе">В работе</option>
            <option value="Завершён">Завершён</option>
            <option value="Отменён">Отменён</option>
        </select>
    </div>
    <div class="col-auto">
        <InputDate class="form-control me-2" @bind-Value="@selectedDate"/>
    </div>
</div>

<div class="mt-4">
    <OrderCardGeneral UserId="@userId" SelectedStatus="@selectedStatus" SelectedDate="@selectedDate"/>
</div>

@code {
    DateTime? selectedDate { get; set; }
    
    string selectedStatus { get; set; }

    private int userId;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            var userIdClaim = user.FindFirst(ClaimTypes.NameIdentifier);
            if (userIdClaim != null)
            {
                userId = int.Parse(userIdClaim.Value);
            }
        }
    }
}