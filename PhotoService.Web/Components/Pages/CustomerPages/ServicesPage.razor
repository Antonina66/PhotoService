@page "/services"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView Roles="Заказчик">
    <Authorized>
        Вы авторизовались как @userRole.
        <p> Привет, @userName!</p>
    </Authorized>
    <NotAuthorized>
        Ошибка. Проверьте актуальность вводимых данных.
    </NotAuthorized>
</AuthorizeView>


<PageTitle>Услуги</PageTitle>

<h2>Услуги</h2>

<div class="row g-3">
    <div class="col-auto">
        <input class="form-control me-2" type="search" placeholder="Поиск" aria-label="Search">
    </div>
    <div class="col-auto">
        <select class="form-select" aria-label="Default select example">
            <option selected>Все</option>
            <option value="1">Фотограф</option>
            <option value="2">Видеограф</option>
            <option value="3">Ретушер</option>
            <option value="4">Дизайнер</option>
            <option value="5">Модель</option>
            <option value="6">Визажист</option>
            <option value="7">Стилист</option>
            <option value="8">Предоставление красивых мест для съёмки</option>
            <option value="9">Предоставление специально оборудованных помещений для проведения съёмки</option>
            <option value="10">Организация съёмочного процесса</option>
        </select>
    </div>
</div>

<div class="row row-cols-1 row-cols-md-3 g-3 mt-2">
    <ServiceCardsForPage/>
    <ServiceCardsForPage/>
    <ServiceCardsForPage/>
    <ServiceCardsForPage/>
</div>


@code {

    [CascadingParameter]
    public Task<AuthenticationState> State { get; set; }

    private string userName;
    private string userRole;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            userName = user.FindFirst(ClaimTypes.Name)?.Value;
            userRole = user.FindFirst(ClaimTypes.Role)?.Value;
        }
    }

}