@page "/my-services"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider
@rendermode InteractiveServer
@attribute [StreamRendering]

@* <button @onclick="GetClaimsPrincipalData">Get ClaimsPrincipal Data</button> *@
<AuthorizeView Roles="Executor">
    <Authorized>
        <MyServicesPage/>
        Вы авторизовались как исполнитель.
    </Authorized>
    <NotAuthorized>
        <MainPage/>
        Ошибка. Проверьте актуальность вводимых данных.
    </NotAuthorized>
</AuthorizeView>


<PageTitle>Мои услуги</PageTitle>

<h2>Мои услуги</h2>

<div class="row g-3">
    <div class="col-auto">
        <input class="form-control me-2" type="search" placeholder="Поиск" aria-label="Search">
    </div>
    <div class="col-auto">
        <select class="form-select" aria-label="Default select example">
            <option selected>Все</option>
            <option value="1">Фотографы</option>
            <option value="2">Видеографы</option>
            <option value="3">Стилисты</option>
        </select>
    </div>
</div>

<div class="row row-cols-1 row-cols-md-3 g-3 mt-2">

</div>


@code {
    [CascadingParameter] 
    public Task<AuthenticationState> State { get; set; }

    private List<Claim> claims = new List<Claim>();

    private async Task GetClaimsPrincipalData()
    {
        var authState = await State;
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            claims = user.Claims.ToList();
        }
    }
}